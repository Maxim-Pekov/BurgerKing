version: "3.3"

services:
  burger_postgres:
    image: postgres:15
    container_name: burger_postgres
    volumes:
      - ./persistent_data/postgres:/var/lib/postgresql/data
    env_file:
      - .env
    restart: always
  burger_project:
    build: .
    tty: true
    image: burger_project
    container_name: burger_project
    depends_on:
      - burger_postgres
    volumes:
      - ./persistent_data/static:/opt/BurgerKing/static
      - ./persistent_data/media:/opt/BurgerKing/media
    env_file:
      - .env
    ports:
      - 8000:8000
    command: >
      sh -c "python manage.py collectstatic --noinput && \
             python manage.py migrate && gunicorn -w 3 star_burger.wsgi:application --bind 0.0.0.0:8000"
    restart: always
  nginx:
    build:
        context: ./nginx/prod
    image: burger_nginx
    depends_on:
      - burger_project
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./persistent_data/nginx:/etc/nginx/conf.d
      - ./persistent_data/certbot/conf:/etc/letsencrypt
      - ./persistent_data/certbot/www:/var/www/certbot
      - ./persistent_data/static:/opt/BurgerKing/static
      - ./persistent_data/media:/opt/BurgerKing/media
    restart: always
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  certbot:
    image: certbot/certbot
    container_name: certbot
    depends_on:
      - nginx
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./persistent_data/certbot/conf:/etc/letsencrypt
      - ./persistent_data/certbot/www:/var/www/certbot


volumes:
  static:
  media:
  postgres:

