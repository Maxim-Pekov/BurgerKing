version: "3.3"

services:
  burger_postgres:
    image: postgres:15
    container_name: burger_postgres
    volumes:
      - ./persistent_data/postgres:/var/lib/postgresql/data
    env_file:
      - .env
    restart: always
  burger_front:
    build: ./front
    tty: true
    image: burger_front
    container_name: burger_front
    depends_on:
      - burger_postgres
    volumes:
      - ./persistent_data/bundles:/opt/BurgerKing/bundles
      - ./persistent_data/assents:/opt/BurgerKing/assets
  burger_project:
    build: .
    tty: true
    image: burger_project
    container_name: burger_project
    depends_on:
      - burger_postgres
    volumes:
      - ./persistent_data/static:/opt/BurgerKing/static
      - ./persistent_data/media:/opt/BurgerKing/media
      - ./persistent_data/bundles:/opt/BurgerKing/bundles
      - ./persistent_data/assents:/opt/BurgerKing/assets
    env_file:
      - .env
    ports:
      - 8000:8000
    command: >
      sh -c "python manage.py collectstatic --noinput && \
             python manage.py migrate && gunicorn -w 3 star_burger.wsgi:application --bind 0.0.0.0:8000"
    restart: always
  nginx:
    build:
        context: ./nginx/dev
    image: burger_nginx
    depends_on:
      - burger_project
    ports:
      - 80:80
    volumes:
      - ./persistent_data/static:/opt/BurgerKing/static
      - ./persistent_data/media:/opt/BurgerKing/media
    restart: always

volumes:
  static:
  media:
  postgres:
  bundles:
  assets:

